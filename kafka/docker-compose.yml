version: '3.8'

services:
  # =============================================================================
  # ZOOKEEPER
  # =============================================================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - kafka-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # KAFKA BROKER
  # =============================================================================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  # =============================================================================
  # KAFKA INIT - CRÉATION AUTOMATIQUE DES TOPICS
  # =============================================================================
  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network
    command: >
      bash -c "
      echo 'Attente du démarrage complet de Kafka...'
      sleep 10
      
      echo '=========================================='
      echo 'Création des topics Kafka'
      echo '=========================================='
      
      kafka-topics --create --if-not-exists \
        --bootstrap-server kafka:29092 \
        --topic notification-topic \
        --partitions 1 \
        --replication-factor 1 \
        --config retention.ms=604800000
      
      kafka-topics --create --if-not-exists \
        --bootstrap-server kafka:29092 \
        --topic user-events \
        --partitions 2 \
        --replication-factor 1 \
        --config retention.ms=2592000000
      
      kafka-topics --create --if-not-exists \
        --bootstrap-server kafka:29092 \
        --topic streetLight-data \
        --partitions 3 \
        --replication-factor 1 \
        --config retention.ms=2592000000
      
      kafka-topics --create --if-not-exists \
        --bootstrap-server kafka:29092 \
        --topic maintenance-events \
        --partitions 2 \
        --replication-factor 1 \
        --config retention.ms=2592000000
      
      kafka-topics --create --if-not-exists \
        --bootstrap-server kafka:29092 \
        --topic audit-logs \
        --partitions 3 \
        --replication-factor 1 \
        --config retention.ms=7776000000
      
      echo '=========================================='
      echo 'Liste des topics créés:'
      echo '=========================================='
      kafka-topics --list --bootstrap-server kafka:29092
      
      echo '=========================================='
      echo 'Configuration terminée!'
      echo '=========================================='
      "

  # =============================================================================
  # KAFKA UI (Optionnel - Interface web pour gérer Kafka)
  # =============================================================================
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: sosdocta-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-network
    restart: unless-stopped

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  kafka-network:
    driver: bridge
    name: kafka-network
    external: false